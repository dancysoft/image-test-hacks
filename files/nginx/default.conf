server {
    listen       80;
    listen  [::]:80;
    #server_name  localhost;
    # This will be passed to fcgi as SERVER_NAME. The multiversion
    # code needs it to be the host part of the URL.
    server_name test.wikipedia.org;

    #access_log  /var/log/nginx/host.access.log  main;

    # location / {
    #     root   /usr/share/nginx/html;
    #     index  index.html index.htm;
    # }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    location ~ ^/w/.*\.php(/.*)?$ {
       root           /srv/mediawiki/docroot/wikipedia.org;
       fastcgi_pass   127.0.0.1:9000;
       fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
       fastcgi_param  HTTP_X_FORWARDED_PROTO https;
       include        fastcgi_params;
    }

    location /wiki/ {
       #  RewriteRule ^/wiki /w/index.php [L]
       rewrite ^/wiki /w/index.php last;
    }

    # # Multiversion static files (T99096)
    # RewriteRule ^/w/skins/.*$ /w/static.php [PT]
    # RewriteRule ^/w/resources/.*$ /w/static.php [PT]
    # RewriteRule ^/w/extensions/.*$ /w/static.php [PT]
    location ~ ^/w/(skins|resources|extensions)/.*$ {
       rewrite ^.*$ /w/static.php last;
    }

    location /static/ {
       return 301 https://wikipedia.org$request_uri;
    }

    # FIXME: Need access to /srv/mediawiki/static for this to work.
    # location /static/ {
    # }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

